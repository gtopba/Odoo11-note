Install
1. Docker Community Edition (CE) : https://docs.docker.com/install/linux/docker-ce/ubuntu/
  1.1 If don't want to use sudo, add your user to the docker group : $ sudo usermod -aG docker $USER
  1.2 Configure Docker to start on boot : $ sudo systemctl enable docker
  1.3 Recap and cheat sheet
    - docker container --help
    - docker version
    - docker info
    - docker run <image>
    - docker image ls
    - docker container ls
    - docker container ls --all
  1.4 Building Dockerfile -> image, Run the image -> container(s)
  1.5 Dockerfile's commands
    - FROM : parent image
    - WORKDIR :
    - COPY :
    - RUN : execute command-line
    - EXPOSE 80 : open port 80 of the container
    - ENV : environment variable
    - CMD ["python", "app.py"] : Run app.py when the container launches
  1.6 Recap and cheat sheet
    - docker build -t friendlyhello . : Create image from current folder
    - docker run -d -p 4000:80 friendlyhello : Run "friendlyhello" mapping port 4000 to 80 in background mode
    - docker container stop <hash>
    - docker container kill <hash>
    - docker container rm <hash>
    - docker container rm $(docker container ls -a -q)
    - docker image ls -a
    - docker image rm <image id>
    - docker image rm $(docker image ls -a -q)
    - docker login
    - docker tag <image> username/repository:tag
    - docker push username/repository:tag
    - docker run username/repository:tag

2. Docker Compose : https://github.com/docker/compose/releases
  2.1 A service only runs one image
    - ports mapping
    - replicas of the container(1 replica = 1 task)
    - cpu, memory
  2.2 Recap and cheat sheet
    - docker-compose --version
    - docker swarm init     # make your current machine a swarm manager
    - docker stack deploy -c <composefile> <appname>      # Create service appname_servicename and create network eg. appname_webnet
    - docker service ls     # Show service eg. appname_web
    - docker stack services <stackname>      # Same result as above (stackname = appname)
    - docker service ps <service>     # List the tasks for your service eg. appname_web
    - docker container ls -q      # also show running tasks include other not in the swarm
    - docker stack ps <app name>      # view all tasks of a stack
    - docker stack ls     # Services stack running containers
    - docker stack rm <appname>     # Tear down an application
    - docker swarm leave --force      # Take down a single node swarm from the manager
  2.3 A Stack (app) <- Services, A Service <- Single image containers (Tasks)
  
3. Docker Machine
  3.1 Docker Machine is a tool for provisioning and managing your Dockerized hosts (hosts with Docker Engine on them).
  3.2 A swarm is a group of machines = Cluster
  3.2 $ base=https://github.com/docker/machine/releases/download/v0.16.0 &&
  curl -L $base/docker-machine-$(uname -s)-$(uname -m) >/tmp/docker-machine &&
  sudo install /tmp/docker-machine /usr/local/bin/docker-machine
  3.3 Recap and cheat sheet
    - docker-machine version
    - docker swarm join     # other machines join the swarm as workers
    - docker-machine ls *[to be continued https://docs.docker.com/get-started/part4/]* *[Go learn Kubernates !!!!]*
*** Access VM from other computer need port forwarding in VirtualBox ***

